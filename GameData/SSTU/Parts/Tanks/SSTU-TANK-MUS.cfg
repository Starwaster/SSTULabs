PART
{
module = Part
name = SSTU-TANK-MUS
author = Shadowmage

TechRequired = fuelSystems
entryCost = 16000
cost = 2116
category = FuelTank
subcategory = 0
title = SSTU - TANK - MUS - Modular Upper Stage
manufacturer = SSTU
description = SSTU - ShipCore: Tanks - Upper Stage.  A modular and configurable upper stage.  Can be configured to any diameter, with additional control for the height of the tank sections.  Includes RCS functionality, and selectable inter-tank and mount options.  Also includes automatically generated and sized fairings.
tags = tank, fuel, ?lfo, ?lf, lh2, hydrolox, kerolox, cryo, resource, storage, bulkhead, upper, second, icps, hus

MODEL
{
	model = SSTU/Assets/EmptyProxyModel
}
rescaleFactor = 1

// nodes/attachment 
// node position specification: posX,posY,posZ,axisX,axisY,axisZ,size
// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
node_stack_top = 0,1,0,0,1,0,2
node_stack_noseInterstage = 0,1,0,0,1,0,2
node_stack_mountInterstage = 0,-1,0,0,-1,0,2
node_stack_bottom = 0,-1,0,0,-1,0,2
attachRules = 1,0,1,1,0

mass = 2.5
crashTolerance = 6
maxTemp = 2000
fuelCrossFeed = True
breakingForce = 200
breakingTorque = 200
vesselType = Probe

EFFECTS
{
	rcs1
	{
		AUDIO_MULTI_POOL
		{
			channel = Ship
			transformName = UpperRCSThrustTransform
			clip = sound_rocket_mini
			volume = 0.0 0.0
			volume = 0.1 0.0
			volume = 0.5 0.025
			volume = 1.0 0.1
			pitch = 0.0 0.75
			pitch = 1.0 1.5
			loop = true
		}
		MODEL_MULTI_PARTICLE
		{
			modelName = Squad/FX/Monoprop_small
			transformName = UpperRCSThrustTransform
			emission = 0.0 0.0
			emission = 0.1 0.0
			emission = 1.0 1.0
			speed = 0.0 0.8
			speed = 1.0 1.0
			localRotation = -90, 0, 0
		}
	}
	rcs2
	{
		AUDIO_MULTI_POOL
		{
			channel = Ship
			transformName = LowerRCSThrustTransform
			clip = sound_rocket_mini
			volume = 0.0 0.0
			volume = 0.1 0.0
			volume = 0.5 0.025
			volume = 1.0 0.1
			pitch = 0.0 0.75
			pitch = 1.0 1.5
			loop = true
		}
		MODEL_MULTI_PARTICLE
		{
			modelName = Squad/FX/Monoprop_small
			transformName = LowerRCSThrustTransform
			emission = 0.0 0.0
			emission = 0.1 0.0
			emission = 1.0 1.0
			speed = 0.0 0.8
			speed = 1.0 1.0
			localRotation = -90, 0, 0
		}
	}
}

MODULE
{
	name = SSTUVolumeContainer
	baseContainerIndex = 0
	subtractMass = false
	subtractCost = false
	CONTAINER
	{
		name = Main Tank
		volume = 0
		tankageVolume = 0.15
		tankageMass = 0.15
		defaultModifier = standard
		defaultFuelPreset = LFO
		resource = LiquidFuel
		resource = LqdHydrogen
		resource = Oxidizer
		resource = MonoPropellant
		resource = Aerozine50
		resource = NTO
		resource = ElectricCharge
		resource = XenonGas
		modifier = standard
		modifier = lbo
		modifier = zbo
		modifier = zboLight
		modifier = light
		modifier = superLight
		modifier = structural
		modifier = structuralLight
	}
	CONTAINER
	{
		name = RCSPropellant
		volume = 0
		tankageVolume = 0.15
		tankageMass = 0.15
		defaultModifier = standard
		modifier = standard
		modifier = light
		modifier = superLight
		defaultResources = NTO,1,1;Aerozine50,1,1
		resource = Aerozine50
		resource = NTO
		resource = MonoPropellant
	}
	CONTAINER
	{
		name = Battery
		volume = 0150
		useStaticVolume = true
		tankageVolume = 0
		tankageMass = 0
		ecHasMass = true
		guiAvailable = false
		defaultModifier = standard
		modifier = standard
		defaultResources = ElectricCharge,1,1
		resource = ElectricCharge
	}
	// tank type upgrades -- unlock the various tank modifier types
	UPGRADE
	{
		name__ = SSTU-VCMod-Lightweight
	}
	UPGRADE
	{
		name__ = SSTU-VCMod-SuperLightweight
	}
	UPGRADE
	{
		name__ = SSTU-VCMod-LowBoiloff
	}
	UPGRADE
	{
		name__ = SSTU-VCMod-ZeroBoiloff
	}
	UPGRADE
	{
		name__ = SSTU-VCMod-LightweightZeroBoiloff
	}
}

MODULE
{
	name = SSTUModularPart
    
    //standard module configuration values
	diameterIncrement = 0.625
	minDiameter = 1.25
	maxDiameter = 1.25
    userAdapterVolume = true
    useAdapterMass = true
    useAdapterCost = true
	enableVScale = true
    
    //layers for use in the built-in animation handling -- ensures no conflicts between models
    solarAnimationLayer = 1
    noseAnimationLayer = 3
    upperAnimationLayer = 5
    coreAnimationLayer = 7
    lowerAnimationLayer = 9
    mountAnimationLayer = 11
    
    //upper-rcs-module will rename its thrust transforms to this name (should be the name specified in the ModuleRCS)
    upperRCSThrustTransform = rcsThrustTransform
    //lower-rcs-module will rename its thrust transforms to this name (should be the name specified in the ModuleRCS)
    lowerRCSThrustTransform = rcsThrustTransform
    //model-slot responsible for engine updating will rename its thrust transforms to this name (should be the name specified in the ModuleEngines)
    engineThrustTransform = engineThrustTransform
    
    //attach nodes that are manipulated by the various models
	topNodeName = top
	bottomNodeName = bottom
	noseManagedNodes = none
	upperManagedNodes = none
	coreManagedNodes = none
	lowerManagedNodes = none
	mountManagedNodes = none
	topInterstageNodeName = noseInterstage
	bottomInterstageNodeName = mountInterstage
	
	topFairingIndex = 0
	bottomFairingIndex = 1
	centralFairingIndex = -1
	
	//index of ModuleRCS to use for 'upper' RCS slot interaction
	upperRCSIndex = 0
	//index of ModuleRCS to use for 'lower' RCS slot interaction
	lowerRCSIndex = 1
	//transform name to use for re-naming of models' thrust transforms for upper rcs model slot
	upperRCSThrustTransform = UpperRCSThrustTransform
	//transform name to use for re-naming of models' thrust transforms for lower rcs model slot
	lowerRCSThrustTransform = LowerRCSThrustTransform
    
    //which model slots may the solar panels be parented to?
    solarParentOptions = NOSE,UPPER,CORE,LOWER,MOUNT
    //which model slots may the upper-rcs be parented to?
    upperRCSParentOptions = NOSE,UPPER,CORE,LOWER,MOUNT
    //which model slots may the lower-rcs be parented to?
    lowerRCSParentOptions = NOSE,UPPER,CORE,LOWER,MOUNT
	
	noseContainerIndex = 0
	upperContainerIndex = 0
	coreContainerIndex = 0
	lowerContainerIndex = 0
	mountContainerIndex = 0
	
	//aux container uses volume from this container
	auxContainerSourceIndex = 0
	//and puts it into this container
	auxContainerTargetIndex = 1
	//min, max, and current aux container percentage, as integer-percent (0-100)
	auxContainerMinPercent = 0
	auxContainerMaxPercent = 15
	auxContainerPercent = 10
    
    //--------------------------------------------------------------------------------------------------//
    //below here specifies starting/default values
    //these values -should- be populated in the config file if
    //you want to control what the default part looks like
    //if defaults are not specified, the first available/valid model + layout for each slot will be used.
    
    
    //initial starting diameter
    currentDiameter = 1.25
	
	//variants are listed in the CORE blocks below
	currentVariant = Split-Tank
	
    //initial starting model selections 
	//(validation not enforced for config-specified values; it is possible to set an invalid configuration as defaults, which -may- cause problems later)
    currentNose = Adapter-Dome-A
    currentUpper = MUS-UpperTank
    currentCore = MUS-Intertank-Skeletal
    currentLower = MUS-LowerTank
    currentMount = Mount-Skeletal-M
	
	//RCS and solar module initial selections
	currentSolar = Solar-None
	currentUpperRCS = RCS-None
	currentLowerRCS = RCS-None
	
    //multi-model layout options for solar, RCS
    currentSolarLayout = Quad-Standard
    currentUpperRCSLayout = Quad-Standard
    currentLowerRCSLayout = Quad-Standard
	
	//default/starting 'parent' slot assignments for solar/rcs
	currentSolarParent = CORE
	currentUpperRCSParent = NOSE
	currentLowerRCSParent = MOUNT
	
    //initial starting texture-set selections for the models listed above
    currentNoseTexture = default
    currentUpperTexture = default
    currentCoreTexture = default
    currentLowerTexture = default
    currentMountTexture = default
    currentSolarTexture = default
    currentUpperRCSTexture = default
    currentLowerRCSTexture = default
	
    //all nose model selections -- generally this will just be adapters, regardless of other models....
    NOSE
    {
        //standard and inset tank caps
        model = Model-TankCap-Inset
        model = Model-TankCap-Flat
		
		//dome endcaps
		model = Adapter-2-1-Dome
		model = Adapter-Dome-A
		model = Adapter-Dome-B
    }
    //all upper model selections; current valid selections determined by current core model
    UPPER
    {
        //empty model -- can be used to allow for an 'intertank only' tank setup 
        model = MUS-UpperTank
        model = MUS-UpperTankLong
    }
	
	CORE
	{
        variant = Split-Tank
        model = MUS-Intertank-Skeletal
		model = Adapter-3-4-Flat
        model = Adapter-3-4-Short
        model = Adapter-3-4-Long
		model = Adapter-2-3-Flat
        model = Adapter-2-3-Short
        model = Adapter-2-3-Long
	}
	CORE
	{
        variant = Common-Bulkhead
        model = MUS-Intertank-None
	}
    
    //all lower model selections; current valid selections determined by current core model
    LOWER
    {
		model = MUS-LowerTank
		model = MUS-LowerTank-None
    }
    
    MOUNT
    {
        model = Model-TankCap-Inset
        model = Model-TankCap-Flat
        
        //adapter model selections
        model = Adapter-2-1-Flat
        //model = Adapter-2-1-Short
        //model = Adapter-2-2-Long
        //model = Adapter-4-3-Flat
        //model = Adapter-4-3-Short
        //model = Adapter-4-3-Long
        //model = Adapter-3-1-Flat
        //model = Adapter-3-1-Short
        //model = Adapter-3-1-Long
        //model = Adapter-3-2-Flat
        //model = Adapter-3-2-Short
        //model = Adapter-3-2-Long
        
        //engine mount model selections
        model = Mount-Nova
        model = Mount-S-II
        model = Mount-S-IVB
        model = Mount-Generic
        model = Mount-Skeletal-L
        model = Mount-Skeletal-M
        model = Mount-Skeletal-S
        model = Mount-Shroud3
        model = Mount-Shroud4
        model = Mount-Shroud5
        model = Mount-Shroud6
		
		//sphere adapters
        model = MFT-S-ADPT-N
        model = MFT-S-ADPT-S
        model = MFT-S-ADPT-M
        model = MFT-SF-ADPT-N
        model = MFT-SF-ADPT-S
        model = MFT-SF-ADPT-M
    }
	
	SOLAR
	{
		model = Solar-None
		model = Solar-DOS-S
        layout = Double-Sides
        layout = Double-FrontRear
        layout = Quad-Standard
        layout = Quad-Rotated
        layout = Quad-X
        layout = Quad-Rotated-X
	}
	
	UPPERRCS
	{
		model = RCS-None
		model = RCS-4F-T
		model = RCS-6A-T
		model = RCS-8A-T
		model = RCS-4F-V
		model = RCS-4A-V
		model = RCS-5F-V
		model = RCS-4A-V2
        layout = Double-Sides
        layout = Double-FrontRear
        layout = Quad-Standard
        layout = Quad-Rotated
	}
	
	LOWERRCS
	{
		model = RCS-None
		model = RCS-4F-T
		model = RCS-6A-T
		model = RCS-8A-T
		model = RCS-4F-V
		model = RCS-4A-V
		model = RCS-5F-V
		model = RCS-4A-V2
        layout = Double-Sides
        layout = Double-FrontRear
        layout = Quad-Standard
        layout = Quad-Rotated
	}
	
	UPGRADES
	{
        // max diameter upgrades -- unlock larger diameter tanks
		UPGRADE
		{
			name__ = SSTU-MFT-D1
			maxDiameter = 1.875
		}
		UPGRADE
		{
			name__ = SSTU-MFT-D2
			maxDiameter = 2.5
		}
		UPGRADE
		{
			name__ = SSTU-MFT-D3
			maxDiameter = 3.125
		}
		UPGRADE
		{
			name__ = SSTU-MFT-D4
			maxDiameter = 3.75
		}
		UPGRADE
		{
			name__ = SSTU-MFT-D5
			maxDiameter = 6.25
		}
		UPGRADE
		{
			name__ = SSTU-MFT-D6
			maxDiameter = 10
		}
        
        // min diameter upgrades -- unlock smaller diameter tanks
		UPGRADE
		{
			name__ = SSTU-MFT-M1
			minDiameter = 0.625
		}
		
		//TODO add upgrades for unlocking solar and RCS options, where applicable
	}
}
MODULE
{
	name = SSTUFuelSelection
	rcsModuleIndex = 0,1
	engineModuleIndex = -1
	containerIndex = 1
	label = RCS Fuel
	currentFuelType = Hypergolic
	FUELTYPE
	{
		name = Hypergolic
	}
	FUELTYPE
	{
		name = MP
	}
}
MODULE
{
	name = ModuleRCSFX
	thrusterTransformName = UpperRCSThrustTransform
	//overridden by ModularPart
	thrusterPower = 1
	PROPELLANT
	{
		name = Aerozine50
		ratio = 1
		DrawGauge = True
		resourceFlowMode = NO_FLOW
	}
	PROPELLANT
	{
		name = NTO
		ratio = 1
		resourceFlowMode = NO_FLOW
	}
	enableRoll = true
	enableYaw = true
	enablePitch = true
	enableX = true
	enableY = true
	enableZ = true
	runningEffectName = rcs1
	fxPrefix = first
	//overridden by FuelSelection
	atmosphereCurve
	{
		key = 0 260
		key = 1 100
	}
}
MODULE
{
	name = ModuleRCSFX
	thrusterTransformName = LowerRCSThrustTransform
	//overridden by ModularPart
	thrusterPower = 1
	PROPELLANT
	{
		name = Aerozine50
		ratio = 1
		DrawGauge = True
		resourceFlowMode = NO_FLOW
	}
	PROPELLANT
	{
		name = NTO
		ratio = 1
		resourceFlowMode = NO_FLOW
	}
	enableRoll = true
	enableYaw = true
	enablePitch = true
	enableX = true
	enableY = true
	enableZ = true
	runningEffectName = rcs2
	fxPrefix = second
	//overridden by FuelSelection
	atmosphereCurve
	{
		key = 0 260
		key = 1 100
	}
}
MODULE
{
	name = SSTUSelectableNodes
	nodeName = noseInterstage
	nodeDefaultOrientation = 0, 1, 0
	startsEnabled = false
}
MODULE
{
	name = SSTUSelectableNodes
	nodeName = mountInterstage
	nodeDefaultOrientation = 0, -1, 0
	startsEnabled = false
}

MODULE
{
	name = SSTUNodeFairing
	diffuseTextureName = SSTU/Assets/SC-GEN-Fairing-DIFF
	nodeName = top
	snapToNode = false
	snapToSecondNode = false
	canManuallyJettison = false
	canAutoJettison = false
	canAdjustSections = true
	canAdjustBottom = false
	canAdjustTop = true	
	fairingName = Top Fairing
	FAIRING
	{
		canAdjustBottom = true
		canAdjustTop = true
	}
}
MODULE
{
	name = SSTUNodeFairing
	diffuseTextureName = SSTU/Assets/SC-GEN-Fairing-DIFF
	nodeName = bottom
	snapToNode = true
	snapToSecondNode = true
	canManuallyJettison = true
	canAdjustSections = true
	canAdjustBottom = true
	canAdjustTop = false
	fairingName = Bottom Fairing
	FAIRING
	{
		canAdjustBottom = true
		canAdjustTop = true
	}
}
MODULE
{
	name = SSTUResourceBoiloff
	// only the first two stats are normally used, rest are loaded from VolumeContainer if present; but configurable for use on stock tanks or whatever
	boiloffLostModifier = 1
	boiloffCostModifier = 1
	activeInsulationPercent = 0
	activeECCost = 1
	activeInsulationPrevention = 1
	inactiveInsulationPrevention = 0
	passiveInsulationPrevention = 0
}

MODULE
{
	name = ModuleCommand
	minimumCrew = 0
	RESOURCE
	{
		name = ElectricCharge
		rate = 0.0275
	}
}
MODULE
{
	name = ModuleSAS
	SASServiceLevel = 3
}

MODULE
{
	name = ModuleResourceConverter
	ConverterName = Fuel Cell
	StartActionName = Start Fuel Cell
	StopActionName = Stop Fuel Cell
	FillAmount = 0.95
	AutoShutdown = false
	GeneratesHeat = false
	UseSpecialistBonus = false

	INPUT_RESOURCE
	{
		ResourceName = MonoPropellant
		Ratio = 0.001875
		FlowMode = STAGE_PRIORITY_FLOW
	}
	OUTPUT_RESOURCE
	{
		ResourceName = ElectricCharge
		Ratio = 1.5
		DumpExcess = false
	}
}
}
